FIND_PACKAGE (SWIG REQUIRED)


INCLUDE (UseSWIG)
INCLUDE_DIRECTORIES (${PYTHON_INCLUDE_PATH})
INCLUDE_DIRECTORIES ("${PROJECT_BINARY_DIR}")

SET (LIBDNF_HEADERS
        ${LIBDNF_HEADERS}
        package.hpp
        repo.hpp
        )

ADD_SUBDIRECTORY(bgettext)
ADD_SUBDIRECTORY(repo)
ADD_SUBDIRECTORY(package)


ADD_LIBRARY (libdnf SHARED ${LIBDNF_SOURCES} ${LIBDNF_HEADERS})
SET (DNF_SO_VERSION 1)
SET_TARGET_PROPERTIES (libdnf PROPERTIES OUTPUT_NAME "dnf")
SET_TARGET_PROPERTIES (libdnf PROPERTIES SOVERSION ${DNF_SO_VERSION})


# SWIG_ADD_LIBRARY doesn't work on RHEL 7 (cmake 2.8.12.2), use SWIG_ADD_MODULE instead
# Example: SWIG_ADD_LIBRARY (pylibdnf LANGUAGE python SOURCES pylibdnf.i)


SET_SOURCE_FILES_PROPERTIES (repo.i PROPERTIES CPLUSPLUS ON)
SWIG_ADD_MODULE (repo python repo.i)
SWIG_LINK_LIBRARIES (repo libdnf)
SWIG_LINK_LIBRARIES (repo ${PYTHON_LIBRARY})

SET_SOURCE_FILES_PROPERTIES (package.i PROPERTIES CPLUSPLUS ON)
SWIG_ADD_MODULE (package python package.i)
SWIG_LINK_LIBRARIES (package libdnf)
SWIG_LINK_LIBRARIES (package ${PYTHON_LIBRARY})

EXECUTE_PROCESS(COMMAND ${PYTHON_EXECUTABLE} -c "
from sys import stdout
from distutils import sysconfig
path=sysconfig.get_python_lib(True, prefix='${CMAKE_INSTALL_PREFIX}')
stdout.write(path)"
OUTPUT_VARIABLE PYTHON_INSTALL_DIR)


INSTALL(FILES ${LIBDNF_HEADERS} DESTINATION include/libdnf)
INSTALL(TARGETS libdnf LIBRARY DESTINATION ${LIB_INSTALL_DIR})
INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/repo.py ${CMAKE_CURRENT_BINARY_DIR}/package.py DESTINATION ${PYTHON_INSTALL_DIR}/libdnf)
INSTALL(TARGETS _repo _package DESTINATION ${PYTHON_INSTALL_DIR}/libdnf)

